# Compile release bulids for the following platforms:
# - Windows (x86_64-pc-windows-gnu)
# - Linux (x86_64-unknown-linux-musl, aarch64-unknown-linux-musl)

name: Compile binaries and create release

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build-create-release:
    name: Compile binaries and create release
    runs-on: ubuntu-latest
    env:
      CARGO_TERM_COLOR: always
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup cargo
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Setup cargo-binstall
        run: curl -L --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.sh | bash
      - name: Install cross
        run: cargo binstall cross -y
      - name: Compile aarch64-unknown-linux-musl
        run: cross build --release --target aarch64-unknown-linux-musl
      - name: Compile x86_64-unknown-linux-musl
        run: cross build --release --target x86_64-unknown-linux-musl
      - name: Compile x86_64-pc-windows-gnu
        run: cross build --release --target x86_64-pc-windows-gnu
      - name: Get tag name from current date
        id: date_tag
        uses: Kaven-Universe/github-action-current-date-time@v1.2.0
        with:
          format: "YYYY-MM-DD_HH-mm-ss"
      - name: Get release name from current date
        id: date_release_name
        uses: Kaven-Universe/github-action-current-date-time@v1.2.0
        with:
          format: "YYYY-MM-DD HH-mm-ss"
      - name: Create release
        id: create_release
        uses: ncipollo/release-action@v1.13.0
        with:
          # Tag with current date + time
          tag: ${{ steps.date_tag.outputs.time }}
          makeLatest: true
          commit: ${{ github.sha }}
          name: ${{ format('Automated Build - {0}', steps.date_release_name.outputs.time) }}
          draft: false
          prerelease: false
      - name: "Upload binary: aarch64-unknown-linux-musl"
        uses: tanyagray/action-upload-release-asset@v1.1.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: target/aarch64-unknown-linux-musl/release/dns-updater
          asset_name: dns-updater_aarch64-unknown-linux-musl
          asset_content_type: application/octet-stream
      - name: "Upload binary: x86_64-unknown-linux-musl"
        uses: tanyagray/action-upload-release-asset@v1.1.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: target/x86_64-unknown-linux-musl/release/dns-updater
          asset_name: dns-updater_x86_64-unknown-linux-musl
          asset_content_type: application/octet-stream
      - name: "Upload binary: x86_64-pc-windows-gnu"
        uses: tanyagray/action-upload-release-asset@v1.1.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: target/x86_64-pc-windows-gnu/release/dns-updater.exe
          asset_name: dns-updater_x86_64-pc-windows-gnu.exe
          asset_content_type: application/octet-stream
